<h2>Welcome to my site!</h2>
<br>
<img src="assets/welcome.png">


<audio controls autoplay></audio>

<input onclick="startRecording()" type="button" value="start recording" />
<input onclick="stopRecording()" type="button" value="stop recording and play" />
<script src="scripts/recorder.js"></script>

<a id="save">Save audio</a>

<script>
    
    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    var audioContext = new AudioContext();
    var audioRecorder = null
    
    
    //initialize audio recorder -- borrowed from souce code of https://webaudiodemos.appspot.com/AudioRecorder/index.html
    
    function gotStream(stream) {
        inputPoint = audioContext.createGain();

        // Create an AudioNode from the stream.
        realAudioInput = audioContext.createMediaStreamSource(stream);
        audioInput = realAudioInput;
        audioInput.connect(inputPoint);

        analyserNode = audioContext.createAnalyser();
        analyserNode.fftSize = 2048;
        inputPoint.connect( analyserNode );

        audioRecorder = new Recorder( inputPoint );

        zeroGain = audioContext.createGain();
        zeroGain.gain.value = 0.0;
        inputPoint.connect( zeroGain );
        zeroGain.connect( audioContext.destination );
    }
    
    function initAudio() {
        if (!navigator.getUserMedia)
            navigator.getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
        if (!navigator.cancelAnimationFrame)
            navigator.cancelAnimationFrame = navigator.webkitCancelAnimationFrame || navigator.mozCancelAnimationFrame;
        if (!navigator.requestAnimationFrame)
            navigator.requestAnimationFrame = navigator.webkitRequestAnimationFrame || navigator.mozRequestAnimationFrame;

        navigator.getUserMedia(
            {
                "audio": {
                    "mandatory": {
                        "googEchoCancellation": "false",
                        "googAutoGainControl": "false",
                        "googNoiseSuppression": "false",
                        "googHighpassFilter": "false"
                    },
                    "optional": []
                },
            }, gotStream, function(e) {
                alert('Error getting audio');
                console.log(e);
        });
        
    }

    window.addEventListener('load', initAudio);
    
    
    //use audio recorder
    function startRecording() {
        console.log("recording")
        if (!audioRecorder) return;

        audioRecorder.clear();
        audioRecorder.record();
    }
    
    function stopRecording() {
        audioRecorder.stop();
        
        audioRecorder.getBuffers(function(buffers) {
            audioRecorder.exportWAV(function(blob) {
                Recorder.setupDownload(blob, "myRecording.wav");
            })
        });
    }
    
</script>